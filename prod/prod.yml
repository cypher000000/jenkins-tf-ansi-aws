---
- name: Configure Prod Server
  hosts: "{{ ec2_instance_ip }}"
  gather_facts: false
  become: true
  tasks:
  - name: Install required system packages
    apt:
      pkg:
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - curl
        - fail2ban
      state: latest
      update_cache: true
  - name: Install boto3 and botocore
    pip:
      name: 
        - boto3>=1.26.0
        - botocore>=1.29.0
      state: present

  - name: Create and insert configuration in /etc/fail2ban/jail.local
    blockinfile:
      path: /etc/fail2ban/jail.local
      marker: ""
      insertafter: EOF
      create: true
      mode: u=rw,g=r,o=r
      block: |
        [sshd]
        enabled = true
        port = ssh
        logpath = /var/log/auth.log
        maxretry = 5
        bantime = 600
        findtime = 600

  - name: Restart service fail2ban, in all cases
    service:
      name: fail2ban
      state: restarted

#uncomment task for general debian, but set "gather_facts: true" in beginning of this playbook and full comment task deb822_repository: "for ubuntu 22_04"
#  - name: Add Docker Module Repository (General Debian)
#    ansible.builtin.deb822_repository:
#      name: docker
#      types: [ deb ]
#      uris: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
#      signed_by: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
#      suites: ["{{ ansible_distribution_release | lower }}"]
#      components: [stable]
#      state: present
#      enabled: yes
      
#for ubuntu 22_04
  - name: Add docker APT repository (Ubuntu 22_04)
    ansible.builtin.deb822_repository:
      name: docker
      types: [ deb ]
      uris: "https://download.docker.com/linux/ubuntu" 
      signed_by: "https://download.docker.com/linux/ubuntu/gpg"
      suites: ["jammy"]
      components: [stable]
      state: present
      enabled: yes

  - name: Update apt and install docker-ce
    apt:
      name: docker-ce
      state: latest
      update_cache: true
  - name: Install Docker Module for Python
    pip:
      name: docker
  - name: Ensure Docker is started
    service:
      name: docker
      state: started
      enabled: true
  - name: Pull Docker image
    community.docker.docker_image_pull:
      name: "{{ repository }}/{{ project }}"
      tag: "{{ image_tag }}"
  - name: Run Docker container with the built artifact
    community.docker.docker_container:
      name: "{{ project }}"
      image: "{{ repository }}/{{ project }}:{{ image_tag }}"
      state: started
      recreate: true
      ports:
        - 8080:8080
      restart_policy: always
